function showElem(outTag, arrElem) {
    document.querySelector(outTag).innerHTML = arrElem;
}

// Task 1
// Создайте массив a. Выведите его на страницу. Элементы внутри вложенных массивов разделяйте пробелом,
//  между вложенными массивами - перенос строки!

const a = [
    [1, 2, 3],
    ['a', 'b', 'c'],
    [4, 5, 6,],
    ['d', 'e', 'f'],
    [7, 8, 9],
]

let out = '';
for (let i = 0; i < a.length; i++) {

    for (let k = 0; k < a[i].length; k++) {
        out += a[i][k] + ' ';
    }
    out += '<br>';
}
showElem('.out-1', out);

// 2 Task
// Выведите на страницу символ 3 из массива a.

showElem('.out-2', a[0][2]);

// 3 Task 
// Выведите на страницу символ e из массива a.

showElem('.out-3', a[3][1]);

// 4 Task
// Выведите на страницу содержимое третьего вложенного массива в массиве a.

showElem('.out-4', a[2]);

// 5 Task
// Выведите на страницу только первые элементы вложенных массивов массива a.

let out5 = '';
for (let i = 0; i < a.length; i++) {
    out5 += a[i][0];
}

showElem('.out-5', out5);

// 6 Task
// Выведите на страницу только четные вложенные массивы массива a.

let result6 = '';
for (let i = 0; i < a.length; i++) {
    for (let k = 0; k < a[i].length; k++) {
        if (a[i][k] % 2 == 0) {
            result6 += a[i][k];
        }
    }
}

showElem('.out-6', result6);

// 7 Task
// Выведите на страницу только числа из массива a.

let result7 = [];       // Почему при проверке на массив через  Array.isArray выводит false?
for (let j = 0; j < a.length; j++) {
    for (let m = 0; m < a[j].length; m++) {
        if (typeof a[j][m] == 'number') {
            result7 += a[j][m];
        }
    }
}

showElem('.out-7', result7);

// 8 Task
// Выведите на страницу длины вложенных массивов в массив a.

let result8 = [];
for (let i = 0; i < a.length; i++) {
    result8 += a[i].length + ' ';  // Чтобы не слипалось в одно число!
}

showElem('.out-8', result8);

// 9 Task
// Выведите на страницу элементы массива a в обратном порядке, т.е.
// 9 8 7 f e ...

let result9 = [];
for (let i = 0; i < a.length; i++) {
    for (let k = 0; k < a[i].length - 1; k++) {
        result9 += a[i].reverse();
        break;
    }
}
result9 = a.reverse();

showElem('.out-9', result9);

// 10 Task.
// Выведите на страницу элементы массива a, причем вложенные массивы должны выводиться в обратном порядке:
// 3 2 1
// c b a
// 6 5 4

let result10 = [];

result10 = a.reverse();

showElem('.out-10', result10);

// 11 Task
// Создайте массив шахматную доску. Белые - 0, черные - 1. Выведите на страницу.

const chessItems = [
    [0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
    [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
    [0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
    [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
    [0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
    [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
    [0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
    [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
    [0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
    [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
];
let out11 = '';

for (let i = 0; i < chessItems.length; i++) {
    for (let d = 0; d < chessItems[i].length; d++) {
        out11 += chessItems[i][d] + ' ';

    }
    out11 += '<br>';
}

showElem('.out-11', out11);

// Task 12.
// Создайте массив шахматную доску. Белые - 0, черные - 1. Напишите функцию, которая выводит данный массив
//  в виде шахматной доски - блоки div в нужном порядке, закранные цветом.

let chessDesk = [
    [0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
    [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
    [0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
    [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
    [0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
    [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
    [0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
];

let out12 = document.querySelector('.out-12');

for (let i = 0; i < chessDesk.length; i++) {
    for (let k = 0; k < chessDesk[i].length; k++) {
        let field = document.createElement('div');
        field.classList.add('chess-block');

        if (chessItems[i][k] == 0) {
            out12.appendChild(field);
        }
        else {
            field.style.backgroundColor = 'black';
            out12.appendChild(field);
        }
    }
    out12.innerHTML += '<br>';
}

// 13 Task
// Создайте массив, который подходит под следующие условия:
// b[0][1] == 4;
// b[3][2] == 5

let b = [
    ['', 4],
    [],
    [],
    [1, 2, 5],
]

console.log(b[0][1]);
console.log(b[3][2]);

// 14 Task
// Создайте массив, который подходит под следующие условия:
// c[0][1] == 4;
// c[2] == 5

const c = [
    [0, 4],
    [],
    5
]

console.log(c[0][1]);
console.log(c[2]);

// 15 Task
// Создайте массив, который подходит под следующие условия:
// d[0][1] == 4;
// d[2][3] == 5
// d[6] = [4,5]

const d = [
    [0, 4],
    [],
    [0, 0, 0, 5],
    [],
    [],
    [],
    [4, 5],
]

console.log(d[0][1]);
console.log(d[2][3]);
console.log(d[6]);

// 16 Task
// Создайте массив, который подходит под следующие условия:
// e[0][1] == 4;
// e[2][3] == 5
// e[6][0][1] = 6;

const e = [
    [0, 4],
    [],
    [0, 0, 0, 5],
    [],
    [],
    [],
    [[0, 6]],
]

console.log(e[0][1]);
console.log(e[2][3]);
console.log(e[6][0][1]);

// 17 Task.
// Создайте массив, который подходит под следующие условия:
// f[0][1][3] == 4;
// f[2][1][1] == 5
// f[6][0][1] = 6;

const f = [
    [[], [0, 0, 4]],
    [],
    [[], [0, 5]],
    [],
    [],
    [],
    [[0, 6]],
]

console.log(f[0][1][3]);
console.log(f[2][1][1]);
console.log(f[6][0][1]);

// Task 18.
// Создайте массив, который подходит под следующие условия:
// g[0][1][3] == 4;
// g[2][1][3] == 5
// g[6][0][1] = 6;
// g[3] == g[5];

const g = [
    [[], [0, 0, 0, 4]],
    [],
    [[], [0, 0, 0, 5]],
    0,
    [],
    0,
    [[0, 6]],
]

console.log(g[0][1][3]);
console.log(g[2][1][3]);
console.log(g[6][0][1]);
console.log(g[3], g[5]);

// 19 Task
// Выведите на страницу сумму элементов массива a (только чисел).

let sum = 0;
for(let i = 0; i < a.length; i++) {
    for (let j = 0; j < a[i].length; j++) {
        if (typeof a[i][j] == 'number') {
            sum += a[i][j];
        }
    }
}

showElem('.out-19', sum);

// 20 Task
// Создайте массив, который эмулирует доску для крестиков - ноликов, напишите все возможные выиграшные
//  комбинации, т.е. a[0][0], a[0][1], a[0][2] - занята первая линия, и т.д.

const game = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9],
];

// game[0][0], game[0][1], game[0][2] - занята первая линия.
// game[0][0], game[1][0], game[2][0] - занят первый столбец.
// game[1][0], game[1][1], game[1][2] - занята вторая линия.
// game[2][0], game[2][1], game[2][2] - занята третья линия.
// game[0][1], game[1][1], game[2][1] - занят второй столбец.
// game[0][2], game[1][2], game[2][2] - занят третий столбец.
// game[0][0], game[1][1], game[2][2] - занята первая диагональ.
// game[0][2], game[1][1], game[2][0] - занята вторая диагональ.